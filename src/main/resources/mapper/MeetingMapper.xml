<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sshj.sshj.mapper.MeetingMapper">
	<insert id="insertMeeting"
		parameterType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			INSERT INTO tb_meeting(
				meeting_name,
				deadline,
				start_date,
				end_date,
				category,
				explanation_title,
				explanation_content,
				created_time,
				meeting_place,
				max_participant,
				club_id,
				chat_url)
			VALUES(
				#{meetingName},
				#{deadline},
				#{startDate},
				#{endDate},
				#{category},
				#{explanationTitle},
				#{explanationContent},
				now(),
				#{meetingPlace},
				#{maxParticipant},
				#{clubId},
				#{chatUrl})
		]]>
		<selectKey keyProperty="meetingId" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="selectMeeting" parameterType="long"
		resultType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			SELECT
				tm.meeting_id as meetingId,
				tm.meeting_name as meetingName,
				tm.deadline as deadline,
				tm.start_date as startDate,
				tm.end_date as endDate,
				tm.category as category,
				tm.explanation_title as explanationTitle,
				tm.explanation_content as explanationContent,
				tm.created_time as createdTime,
				tm.max_participant as maxParticipant,
				tm.club_id as clubId,
				tm.meeting_place as meetingPlace,
				(SELECT nickname FROM tb_user WHERE user_id = tm.club_id ) as clubName,
				(SELECT count(*) FROM tb_user_by_meeting WHERE meeting_id = #{meetingId}) as curParticipant,
				EXISTS (
					SELECT * FROM tb_user_by_meeting tubm 
					WHERE user_id = #{userId} and meeting_id = #{meetingId}
					) as applied
			FROM
				tb_meeting AS tm
			WHERE
			    tm.meeting_id=#{meetingId};
		]]>
	</select>

	<select id="selectMeetingList" parameterType="sshj.sshj.dto.MeetingSearchDto"
		resultType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			SELECT
				tbm.meeting_id as meetingId,
				tbm.meeting_name as meetingName,
				tbm.deadline as deadline,
				tbm.start_date as startDate,
				tbm.end_date as endDate,
				tbm.category as category,
				tbm.explanation_title as explanationTitle,
				tbm.explanation_content as explanationContent,
				tbm.created_time as createdTime,
				tbm.max_participant as maxParticipant,
				(SELECT COUNT(*) FROM tb_user_by_meeting tubm WHERE tbm.meeting_id = tubm.meeting_id) as curParticipant,
				tbm.meeting_place as meetingPlace,
				tbu.nickname as clubName,
				tbm.club_id as clubId
			FROM
				tb_meeting as tbm
			JOIN
				tb_user as tbu
			ON
				tbm.club_id = tbu.user_id
		]]>		
		<if test='"Y".equals(isSubscribed.name)'>
			INNER JOIN
				tb_club_subscription as tcs
			ON
				tcs.club_id = tbm.club_id
		</if>
		<if test='"Y".equals(isApplied.name)'>
			INNER JOIN
				tb_user_by_meeting as tubm
			ON
				tubm.meeting_id = tbm.meeting_id
		</if>
		<![CDATA[
			WHERE 1=1
		]]>
		<if test="clubId > 0">
			and tbm.club_id = #{clubId}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty( startDate )">
			and tbm.start_date >= #{startDate}
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty( endDate )">
		<![CDATA[
			and tbm.end_date <= #{endDate}
		]]>
		</if>
		<if test="@org.apache.commons.lang3.StringUtils@isNotEmpty( category )">
			and tbm.category = #{category}
		</if>
		<if test='"Y".equals(isSubscribed.name)'>
			and tcs.user_id = #{userId}
		</if>
		<if test='"Y".equals(isApplied.name)'>
			and tubm.user_id = #{userId}
		</if>
		<![CDATA[
			limit #{offset}, #{pageScale}
		]]>
	</select>

	<select id="selectClubByMeetingList" parameterType="long"
		resultType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			SELECT
				tbm.meeting_id as meetingId,
				tbm.meeting_name as meetingName,
				tbm.deadline as deadline,
				tbm.start_date as startDate,
				tbm.end_date as endDate,
				tbm.category as category,
				tbm.explanation_title as explanationTitle,
				tbm.explanation_content as explanationContent,
				tbm.meeting_place as meetingPlace,
				tbm.created_time as createdTime,
				tbm.max_participant as maxParticipant,
				(SELECT COUNT(*) FROM tb_user_by_meeting tubm WHERE tbm.meeting_id = tubm.meeting_id) as curParticipant,
				tbm.club_id as clubId,
				tbu.nickname as clubName
			FROM
				tb_meeting tbm left join tb_user tbu on tbm.club_id = tbu.user_id
			WHERE
			    tbm.club_id=#{clubId}
		]]>
	</select>

	<update id="updateMeeting"
		parameterType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			UPDATE tb_meeting
			SET meeting_name=#{meetingName},
				deadline=#{deadline},
				start_date=#{startDate},
				end_date=#{endDate},
				category=#{category},
				explanation_title=#{explanationTitle},
				explanation_content=#{explanationContent},
				meeting_place=#{meetingPlace},
				created_time=now(),
				max_participant=#{maxParticipant},
				chat_url=#{chatUrl}
			WHERE meeting_id=#{meetingId}
		]]>
	</update>

	<delete id="deleteMeeting" parameterType="long">
        <![CDATA[
            DELETE FROM tb_meeting
            WHERE meeting_id=#{meetingId}
        ]]>
	</delete>

	<select id="selectUserByMeetingList"
		resultType="sshj.sshj.dto.MeetingDto">
        <![CDATA[
			SELECT
				meeting_id as meetingId,
				meeting_name as meetingName,
				deadline as deadline,
				start_date as startDate,
				end_date as endDate,
				category as category,
				explanation_title as explanationTitle,
				explanation_content as explanationContent,
				created_time as createdTime,
				meeting_place as meetingPlace,
				max_participant as maxParticipant,
				club_id as clubId
			FROM
				tb_meeting
			WHERE
			    meeting_id IN (SELECT meeting_id FROM tb_user_by_meeting WHERE user_id = #{userId})
		]]>
	</select>

	<insert id="insertMeetingLike">
        <![CDATA[
        INSERT INTO tb_meeting_like(
            user_id,
            meeting_id)
        VALUES(
        #{userId},
        #{meetingId})
        ]]>
	</insert>

	<delete id="deleteMeetingLike">
        <![CDATA[
            DELETE FROM tb_meeting_like
            WHERE user_id=#{userId} AND meeting_id=#{meetingId}
        ]]>
	</delete>
	
	<insert id="registerUserApplied">
        <![CDATA[
        INSERT INTO tb_user_by_meeting(
            user_id,
            meeting_id,
            created_time)
        VALUES(
        #{userId},
        #{meetingId},
        now())
        ]]>
	</insert>
	
	<delete id="deleteUserApplied">
        <![CDATA[
            DELETE FROM tb_user_by_meeting
            WHERE user_id=#{userId} AND meeting_id=#{meetingId}
        ]]>
	</delete>
	
	<select id="getMeetingUserList" resultType="sshj.sshj.dto.UserDto">
        <![CDATA[
			SELECT 
				tu.user_id as userId,
				tu.profile_url as profileUrl,
				tu.email as email,
				tu.`role` as `role`, 
				tu.nickname as nickname,
				tu.created_time as createdTime
			FROM 
				tb_user tu
			JOIN 
				tb_user_by_meeting tubm
			ON 
				tu.user_id = tubm.user_id
			JOIN 
				tb_meeting tm
			ON 
				tm.meeting_id = tubm.meeting_id  
			WHERE 
				tubm.meeting_id = #{meetingId}
				and tm.club_id = #{clubId};
		]]>
	</select>
	
	<select id="getMeetingChatUrl" resultType="string">
        <![CDATA[
			SELECT 
				tbm.chat_url
			FROM
				tb_meeting tbm
			JOIN
				tb_user_by_meeting tubm
			ON
				tbm.meeting_id = tubm.meeting_id
			WHERE
				tbm.meeting_id = #{meetingId}
				AND (
					tbm.club_id = #{userId}
					OR tubm.user_id = #{userId})
			LIMIT 1;
		]]>
	</select>
	
</mapper>